name: Deployment C++ Studio

on:
  workflow_dispatch:

jobs:
  deploy-mac:
    runs-on: macos-12

    steps:
      - name: Checkout source code repo
        uses: actions/checkout@v2.4.2
        with:
          repository: muselive-inc/museLIVEStudio
          ref: main
          token: ${{ secrets.GH_TOKEN }}
          submodules: recursive
    
#       - name: Setup Cpp (C++ / C)
#         id: install_cc
#         uses: aminya/setup-cpp@v0.24.1
#         with:
#           compiler: clang
#           ninja: 1.10.2
    
#       - name: Check compiler
#         shell: bash
#         env:
#             CC: ${{ steps.install_cc.outputs.cc }}
#             CXX: ${{ steps.install_cc.outputs.cxx }}
#         run: |
#             echo ${{ env.CC }} ${{ env.CXX }}
#             ls /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
  
      - name: Install Qt
        uses: jurplel/install-qt-action@v3.0.0
        with:
          version: 6.4.0
    
      - name: Check Installation
        run: |
          echo ${{env.Qt6_DIR}}
          /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ --version
  
      - name: Install Dependencies
        run: |
          brew install openssl@1.1 ffmpeg
  
#       - name: Install ninja-build tool
#         uses: seanmiddleditch/gha-setup-ninja@v3
      
      - name: Setup Cpp (C++ / C)
        uses: aminya/setup-cpp@v0.24.1
        with:
          ninja: 1.10.2
      
      - name: Build
        run: |
          mkdir build
          cd build
          OPENSSL_ROOT_DIR=$(brew --prefix openssl@1.1)
          FFMPEG_ROOT_DIR=$(brew --prefix ffmpeg)
          echo $OPENSSL_ROOT_DIR $FFMPEG_ROOT_DIR
          cmake -S .. -B . -D CMAKE_GENERATOR:STRING=Ninja -DCMAKE_C_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -DCMAKE_CXX_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_PREFIX_PATH:PATH=${{env.Qt6_DIR}} -DOPENSSL_ROOT_DIR:STRING=${OPENSSL_ROOT_DIR} -DOPENSSL_INCLUDE_DIR:STRING=${OPENSSL_ROOT_DIR}/include -DFFMPEG_ROOT_DIR:STRING=${FFMPEG_ROOT_DIR}
          cmake build . --target all
      
      - name: "Import Certificate: Developer ID"
        uses: devbotsxyz/import-signing-certificate@v1.0.0
        with:
          certificate-data: ${{ secrets.CERTIFICATES_P12 }}
          certificate-passphrase: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          keychain-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
  
      - name: Build Artifacts
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PW: ${{ secrets.APPLE_ID_PW }}
        run: |
          ./build.sh
      
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: python3 scripts/upload.py

